- name: Install OpenVPN and EasyRSA
  become: true
  apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - openvpn
    - easy-rsa

- name: Create EasyRSA directory
  file:
    path: "{{ ansible_env.HOME }}/openvpn-ca"
    state: directory
    owner: "{{ ansible_env.USER | default('pi') }}"
    group: "{{ ansible_env.USER | default('pi') }}"
    mode: "0755"

- name: Create the vars file for EasyRSA CA
  template:
    src: vars.j2
    dest: "{{ ansible_env.HOME }}/openvpn-ca/vars"
    owner: "{{ ansible_env.USER | default('pi') }}"
    group: "{{ ansible_env.USER | default('pi') }}"
    mode: "0644"

- name: Initialize EasyRSA PKI
  shell: echo 'yes' | ./easyrsa init-pki
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca"
    executable: /bin/bash

- name: Build CA (Generate Root Certificate Authority)
  shell: echo 'yes' | ./easyrsa build-ca nopass
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca"
    executable: /bin/bash

- name: Generate server key and certificate
  shell: |
    export EASYRSA_BATCH=1
    ./easyrsa gen-req {{ openvpn.vars.KEY_NAME }} nopass
    echo 'yes' | ./easyrsa sign-req server {{ openvpn.vars.KEY_NAME }}
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca"
    executable: /bin/bash

- name: Generate Diffie-Hellman parameters
  shell: ./easyrsa gen-dh
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca"
    executable: /bin/bash

- name: Generate TLS auth key
  command: "/sbin/openvpn --genkey --secret pki/ta.key"
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca"

- name: Copy generated keys and certificates to OpenVPN directory
  become: true
  copy:
    src: "{{ ansible_env.HOME }}/openvpn-ca/pki/{{ item }}"
    dest: "/etc/openvpn/"
    remote_src: yes
  loop:
    - ca.crt
    - issued/{{ openvpn.vars.KEY_NAME }}.crt
    - private/{{ openvpn.vars.KEY_NAME }}.key
    - dh.pem
    - ta.key

- name: Configure OpenVPN server
  become: true
  template:
    src: server.conf.j2
    dest: /etc/openvpn/server.conf
  notify: Restart OpenVPN

- name: Enable IP forwarding (Append, Not Override)
  become: true
  lineinfile:
    path: /etc/sysctl.conf
    insertafter: EOF
    line: 'net.ipv4.ip_forward=1'
  notify: Apply Sysctl

- name: Configure firewall rules
  become: true
  copy:
    src: iptables.rules
    dest: /etc/iptables.rules
  notify: Apply Firewall Rules

- name: Start and enable OpenVPN service
  become: true
  systemd:
    name: openvpn@server
    enabled: yes
    state: started
    daemon_reload: yes
    after: network-online.target k3s.service

- name: Generate client key and certificate
  shell: |
    export EASYRSA_BATCH=1
    ./easyrsa gen-req {{ openvpn.client_name }} nopass
    echo 'yes' | ./easyrsa sign-req client {{ openvpn.client_name }}
  args:
    chdir: "{{ ansible_env.HOME }}/openvpn-ca"
    executable: /bin/bash

- name: Copy client keys and certificates
  become: true
  copy:
    src: "{{ ansible_env.HOME }}/openvpn-ca/pki/{{ item }}"
    dest: "/etc/openvpn/client-configs/"
    remote_src: yes
  loop:
    - ca.crt
    - issued/{{ openvpn.client_name }}.crt
    - private/{{ openvpn.client_name }}.key
    - ta.key

- name: Generate client config
  template:
    src: client.ovpn.j2
    dest: "/etc/openvpn/client-configs/{{ openvpn.client_name }}.ovpn"
