
- name: Enable cgroup_memory=1 cgroup_enable=memory
  become: yes
  lineinfile:
    path: /boot/cmdline.txt
    state: present
    backrefs: yes
    regexp: '(.*rootwait)'
    line: '\1 cgroup_memory=1 cgroup_enable=memory'
  notify: Reboot the Machine

- name: Set Current IP as Static
  become: yes
  lineinfile:
    path: /etc/dhcpcd.conf
    state: present
    insertafter: "{{ item.after }}"
    # regexp: "{{ item.after }}"
    line: "{{ item.to }}"
  loop:
    - {after: '# Static IP Config for Eth0', to: "# Static IP Config for Eth0"}
    - {after: '# Static IP Config for Eth0', to: "interface eth0"}
    - {after: "interface eth0", to: "static domain_name_servers={{ k3s.static.dns }}"}
    - {after: "interface eth0", to: "static routers={{ k3s.static.router }}"}
    - {after: "interface eth0", to: "static ip_address={{ ansible_default_ipv4.address }}"}
  notify: Reboot the Machine

- name: Set Hostname
  become: yes
  hostname:
    name: "{{ hostname }}"
  notify: Reboot the Machine

- name: Update /etc/hosts
  become: yes
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1'
    line: 127.0.1.1   {{ hostname }}
  notify: Reboot the Machine

- name: Use Legacy IPtables
  become: yes
  alternatives:
    name: "{{ item.name }}"
    path: "{{ item.path }}"
  loop:
    - {name: "iptables", path: "/usr/sbin/iptables-legacy"}
    - {name: "ip6tables", path: "/usr/sbin/ip6tables-legacy"}
  notify: Reboot the Machine

- name: Flush Handlers
  meta: flush_handlers
  args:
    warn: false

- name: Download K3S installer
  get_url: 
    url: "{{ k3s.url }}"
    dest: "{{ k3s.tmpfile }}"
    mode: '0777'

# - name: Execute the K3S Installer
#   shell: "{{ k3s.tmpfile }} --no-deploy servicelb --no-deploy traefik"
#   when: "'k3sMaster' is in group_names"

- name: Get K3S Node Token
  delegate_to: "{{ groups['k3sMaster'][0] }}"
  become: yes
  shell: cat {{ k3s.nodetoken }}
  register: nodetoken

# - name: Debug Node Token
#   debug:
#     msg: "{{ nodetoken.stdout }}"

- name: Join K3s Cluster as Node
  shell: |
    export K3S_URL=https://{{ hostvars[groups['k3sMaster'][0]]['ansible_eth0']['ipv4']['address'] }}:6443
    export K3S_TOKEN={{ nodetoken.stdout }}
    {{ k3s.tmpfile }}
  when: "'k3sNodes' is in group_names"

- name: Remove the K3S Installer
  file: 
    path: "{{ k3s.tmpfile }}"
    state: absent

# Install MetalLB
# helm install metallb stable/metallb --namespace kube-system \
#   --set configInline.address-pools[0].name=default \
#   --set configInline.address-pools[0].protocol=layer2 \
#   --set configInline.address-pools[0].addresses[0]=10.0.1.1-10.0.1.254

# Install Nginx Ingress
# helm install nginx-ingress stable/nginx-ingress --namespace kube-system \
#     --set defaultBackend.enabled=false
